<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    Copyright 2005 The Apache Software Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!-- $Rev: 219424 $ $Date: 2005-07-18 01:19:16 +0200 (Mon, 18 Jul 2005) $ -->

<project default="default" xmlns:j="jelly:core" xmlns:u="jelly:util" xmlns:ant="jelly:ant">

	<goal name="default" prereqs="init">
		<j:set var="goal" value="jar:install" />
		<attainGoal name="multiproject:goal" />
	</goal>

	<!-- downloads wtp before calling default goal -->
	<goal name="build">
		<attainGoal name="getwtp"/>
		<attainGoal name="default" />
	</goal>

	<goal name="clean" prereqs="init">
		<j:set var="goal" value="clean" />
		<attainGoal name="multiproject:goal" />
		<ant:delete dir="./plugins/temp" />
	</goal>
	
	<goal name="clean-all">>
		<attainGoal name="clean"/>
		<attainGoal name="clean-repo"/>
	</goal>

	<goal name="rebuild">
		<attainGoal name="clean" />
		<attainGoal name="build" />
	</goal>

	<goal name="eclipse" prereqs="init">
		<j:set var="goal" value="eclipse" />
		<j:set var="maven.multiproject.includes" value="plugins/org.apache.geronimo.runtime.v1/project.xml" />
		<attainGoal name="multiproject:goal" />
	</goal>

	<goal name="init">
		<j:set var="maven.multiproject.excludes" value="etc/project.xml" />
		<j:set var="maven.multiproject.includes" value="*/project.xml,*/*/project.xml" />

		<j:set var="os" value="${os.name}" />
		<j:if test="${os.startsWith('Windows')}">
          ${systemScope.setProperty('swt.fragmentid','win32.win32.x86')}
       </j:if>
		<j:if test="${os.startsWith('Mac')}">
          ${systemScope.setProperty('swt.fragmentid','carbon.macosx.ppc')}
       </j:if>
		<j:if test="${os.startsWith('Linux')}">
          ${systemScope.setProperty('swt.fragmentid','gtk.linux.x86')}
       </j:if>
	</goal>
	
	<goal name="clean-repo">
		<ant:delete dir="${maven.repo.local}/geronimo-devtools"/>
		<ant:delete dir="${maven.repo.local}/eclipse"/>
    </goal>

	<goal name="getwtp">
		<j:set var="target.dir" value="./target" />

		<j:set var="os" value="${os.name}" />
		<j:if test="${os.startsWith('Linux')}">
			<j:set var="platform" value="linux-gtk" />
			<j:set var="extension" value="${platform}.tar.gz" />
		</j:if>
		<j:if test="${os.startsWith('Mac')}">
			<j:set var="platform" value="macosx-carbon" />
			<j:set var="extension" value="${platform}.tar.gz" />
		</j:if>
		<j:if test="${os.startsWith('Windows')}">
			<j:set var="platform" value="win32" />
			<j:set var="extension" value="${platform}.zip" />
		</j:if>
		
		<j:set var="wtp.build.path" value="eclipse/webtools/downloads/drops"/>
		<j:set var="wtp.build.folder" value="I-I20051105-200511051946"/>
		
		<j:set var="eclipse.build.filename" value="eclipse-SDK-3.1.1-${extension}"/>
		<j:set var="emf.build.filename" value="emf-sdo-xsd-SDK-2.1.1.zip"/>
		<j:set var="gef.build.filename" value="GEF-SDK-3.1.1.zip"/>
		<j:set var="jem.build.filename" value="JEM-SDK-1.1.0.1.zip"/>
		<j:set var="wtp.build.filename" value="wtp-sdk-I20051105.zip"/>

		<j:set var="eclipse.download" value="http://download.eclipse.org/eclipse/downloads/drops/R-3.1.1-200509290840/${eclipse.build.filename}"/>
		<j:set var="emf.download" value="http://download.eclipse.org/tools/emf/downloads/drops/2.1.1/R200509281310/${emf.build.filename}"/>
		<j:set var="gef.download" value="http://download.eclipse.org/tools/gef/downloads/drops/R-3.1.1-200509301327/${gef.build.filename}"/>
		<j:set var="jem.download" value="http://download.eclipse.org/tools/ve/downloads/drops/R-1.1.0.1-200509071822/${jem.build.filename}"/>
		<j:set var="wtp.download" value="http://mirrors.ibiblio.org/pub/mirrors/${wtp.build.path}/${wtp.build.folder}/${wtp.build.filename}"/>
			
		<j:set var="wtp.dist" value="${maven.repo.local}/eclipse/wtp/distributions/${wtp.build.filename}"/>
		<j:set var="eclipse.dist" value="${maven.repo.local}/eclipse/eclipse/distributions/${eclipse.build.filename}"/>
		<j:set var="emf.dist" value="${maven.repo.local}/eclipse/emf/distributions/${emf.build.filename}"/>
		<j:set var="gef.dist" value="${maven.repo.local}/eclipse/gef/distributions/${gef.build.filename}"/>
		<j:set var="jem.dist" value="${maven.repo.local}/eclipse/jem/distributions/${jem.build.filename}"/>

		<!-- Download wtp if it isn't in the repo -->
		<u:file var="fileAsFile" name="${wtp.dist}"/>
		<j:if test="${!(fileAsFile.exists())}">
			<mkdir dir="${maven.repo.local}/eclipse/wtp/distributions"/>
			<get src="${wtp.download}" dest="${wtp.dist}"/>
		</j:if>
		<!-- Download eclipse if it isn't in the repo -->
		<u:file var="fileAsFile" name="${eclipse.dist}"/>
		<j:if test="${!(fileAsFile.exists())}">
			<mkdir dir="${maven.repo.local}/eclipse/eclipse/distributions"/>
			<get src="${eclipse.download}" dest="${eclipse.dist}"/>
		</j:if>
		<!-- Download emf if it isn't in the repo -->
		<u:file var="fileAsFile" name="${emf.dist}"/>
		<j:if test="${!(fileAsFile.exists())}">
			<mkdir dir="${maven.repo.local}/eclipse/emf/distributions"/>
			<get src="${emf.download}" dest="${emf.dist}"/>
		</j:if>
		<!-- Download gef if it isn't in the repo -->
		<u:file var="fileAsFile" name="${gef.dist}"/>
		<j:if test="${!(fileAsFile.exists())}">
			<mkdir dir="${maven.repo.local}/eclipse/gef/distributions"/>
			<get src="${gef.download}" dest="${gef.dist}"/>
		</j:if>
		<!-- Download jem if it isn't in the repo -->
		<u:file var="fileAsFile" name="${jem.dist}"/>
		<j:if test="${!(fileAsFile.exists())}">
			<mkdir dir="${maven.repo.local}/eclipse/jem/distributions"/>
			<get src="${jem.download}" dest="${jem.dist}"/>
		</j:if>

		<ant:delete dir="${target.dir}"/>
		<mkdir dir="${target.dir}"/>
		<j:if test="${os.startsWith('Windows')}">
			<unjar src="${eclipse.dist}" dest="${target.dir}"/>
		</j:if>
		<j:if test="${os.startsWith('Linux') || os.startsWith('Mac')}">
			<!--<gunzip src="${eclipse.dist}" dest="${maven.repo.local}/eclipse/eclipse/distributions"/>
			<untar dest="${target.dir}">
			    <fileset dir="${maven.repo.local}/eclipse/eclipse/distributions">
			    		<include name="*.tar"/>
			    </fileset>
			</untar>-->
			<gunzip src="${eclipse.dist}" dest="${target.dir}"/>
			<exec executable="tar" dir="${target.dir}">
				<arg value="-xvf"/>
				<arg value="eclipse-SDK-3.1.1-${platform}.tar"/>
			</exec>
		</j:if>
		<unjar src="${emf.dist}" dest="${target.dir}"/>
		<unjar src="${gef.dist}" dest="${target.dir}"/>
		<unjar src="${jem.dist}" dest="${target.dir}"/>
	 	<unjar src="${wtp.dist}" dest="${target.dir}"/>
	</goal>
			
</project>
