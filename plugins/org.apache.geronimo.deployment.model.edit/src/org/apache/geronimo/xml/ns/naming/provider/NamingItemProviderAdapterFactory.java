/**
 * Copyright 2004, 2005 The Apache Software Foundation or its licensors, as applicable
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.apache.geronimo.xml.ns.naming.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.apache.geronimo.xml.ns.naming.util.NamingAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITableItemLabelProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class NamingItemProviderAdapterFactory extends NamingAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable
{
  /**
   * This keeps track of the root adapter factory that delegates to this adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComposedAdapterFactory parentAdapterFactory;

  /**
   * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IChangeNotifier changeNotifier = new ChangeNotifier();

  /**
   * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Collection supportedTypes = new ArrayList();

  /**
   * This constructs an instance.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated NOT
   */
  public NamingItemProviderAdapterFactory()
  {
    supportedTypes.add(IEditingDomainItemProvider.class);
    supportedTypes.add(IStructuredItemContentProvider.class);
    supportedTypes.add(ITreeItemContentProvider.class);
    supportedTypes.add(IItemLabelProvider.class);
    supportedTypes.add(IItemPropertySource.class);		
    supportedTypes.add(ITableItemLabelProvider.class);
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.CssType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CssTypeItemProvider cssTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.CssType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createCssTypeAdapter()
  {
    if (cssTypeItemProvider == null)
    {
      cssTypeItemProvider = new CssTypeItemProvider(this);
    }

    return cssTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.DocumentRoot} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DocumentRootItemProvider documentRootItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.DocumentRoot}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createDocumentRootAdapter()
  {
    if (documentRootItemProvider == null)
    {
      documentRootItemProvider = new DocumentRootItemProvider(this);
    }

    return documentRootItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.EjbLocalRefType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EjbLocalRefTypeItemProvider ejbLocalRefTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.EjbLocalRefType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createEjbLocalRefTypeAdapter()
  {
    if (ejbLocalRefTypeItemProvider == null)
    {
      ejbLocalRefTypeItemProvider = new EjbLocalRefTypeItemProvider(this);
    }

    return ejbLocalRefTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.EjbRefType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EjbRefTypeItemProvider ejbRefTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.EjbRefType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createEjbRefTypeAdapter()
  {
    if (ejbRefTypeItemProvider == null)
    {
      ejbRefTypeItemProvider = new EjbRefTypeItemProvider(this);
    }

    return ejbRefTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.GbeanLocatorType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GbeanLocatorTypeItemProvider gbeanLocatorTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.GbeanLocatorType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createGbeanLocatorTypeAdapter()
  {
    if (gbeanLocatorTypeItemProvider == null)
    {
      gbeanLocatorTypeItemProvider = new GbeanLocatorTypeItemProvider(this);
    }

    return gbeanLocatorTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.GbeanRefType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GbeanRefTypeItemProvider gbeanRefTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.GbeanRefType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createGbeanRefTypeAdapter()
  {
    if (gbeanRefTypeItemProvider == null)
    {
      gbeanRefTypeItemProvider = new GbeanRefTypeItemProvider(this);
    }

    return gbeanRefTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.MessageDestinationType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MessageDestinationTypeItemProvider messageDestinationTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.MessageDestinationType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createMessageDestinationTypeAdapter()
  {
    if (messageDestinationTypeItemProvider == null)
    {
      messageDestinationTypeItemProvider = new MessageDestinationTypeItemProvider(this);
    }

    return messageDestinationTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.PortCompletionType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PortCompletionTypeItemProvider portCompletionTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.PortCompletionType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createPortCompletionTypeAdapter()
  {
    if (portCompletionTypeItemProvider == null)
    {
      portCompletionTypeItemProvider = new PortCompletionTypeItemProvider(this);
    }

    return portCompletionTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.PortType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PortTypeItemProvider portTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.PortType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createPortTypeAdapter()
  {
    if (portTypeItemProvider == null)
    {
      portTypeItemProvider = new PortTypeItemProvider(this);
    }

    return portTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.ResourceEnvRefType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ResourceEnvRefTypeItemProvider resourceEnvRefTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.ResourceEnvRefType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createResourceEnvRefTypeAdapter()
  {
    if (resourceEnvRefTypeItemProvider == null)
    {
      resourceEnvRefTypeItemProvider = new ResourceEnvRefTypeItemProvider(this);
    }

    return resourceEnvRefTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.ResourceLocatorType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ResourceLocatorTypeItemProvider resourceLocatorTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.ResourceLocatorType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createResourceLocatorTypeAdapter()
  {
    if (resourceLocatorTypeItemProvider == null)
    {
      resourceLocatorTypeItemProvider = new ResourceLocatorTypeItemProvider(this);
    }

    return resourceLocatorTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.ResourceRefType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ResourceRefTypeItemProvider resourceRefTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.ResourceRefType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createResourceRefTypeAdapter()
  {
    if (resourceRefTypeItemProvider == null)
    {
      resourceRefTypeItemProvider = new ResourceRefTypeItemProvider(this);
    }

    return resourceRefTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.ServiceCompletionType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ServiceCompletionTypeItemProvider serviceCompletionTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.ServiceCompletionType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createServiceCompletionTypeAdapter()
  {
    if (serviceCompletionTypeItemProvider == null)
    {
      serviceCompletionTypeItemProvider = new ServiceCompletionTypeItemProvider(this);
    }

    return serviceCompletionTypeItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.apache.geronimo.xml.ns.naming.ServiceRefType} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ServiceRefTypeItemProvider serviceRefTypeItemProvider;

  /**
   * This creates an adapter for a {@link org.apache.geronimo.xml.ns.naming.ServiceRefType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter createServiceRefTypeAdapter()
  {
    if (serviceRefTypeItemProvider == null)
    {
      serviceRefTypeItemProvider = new ServiceRefTypeItemProvider(this);
    }

    return serviceRefTypeItemProvider;
  }

  /**
   * This returns the root adapter factory that contains this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComposeableAdapterFactory getRootAdapterFactory()
  {
    return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
  }

  /**
   * This sets the composed adapter factory that contains this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory)
  {
    this.parentAdapterFactory = parentAdapterFactory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFactoryForType(Object type)
  {
    return supportedTypes.contains(type) || super.isFactoryForType(type);
  }

  /**
   * This implementation substitutes the factory itself as the key for the adapter.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Adapter adapt(Notifier notifier, Object type)
  {
    return super.adapt(notifier, this);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Object adapt(Object object, Object type)
  {
    if (isFactoryForType(type))
    {
      Object adapter = super.adapt(object, type);
      if (!(type instanceof Class) || (((Class)type).isInstance(adapter)))
      {
        return adapter;
      }
    }

    return null;
  }

  /**
   * This adds a listener.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void addListener(INotifyChangedListener notifyChangedListener)
  {
    changeNotifier.addListener(notifyChangedListener);
  }

  /**
   * This removes a listener.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void removeListener(INotifyChangedListener notifyChangedListener)
  {
    changeNotifier.removeListener(notifyChangedListener);
  }

  /**
   * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void fireNotifyChanged(Notification notification)
  {
    changeNotifier.fireNotifyChanged(notification);

    if (parentAdapterFactory != null)
    {
      parentAdapterFactory.fireNotifyChanged(notification);
    }
  }

  /**
   * This disposes all of the item providers created by this factory. 
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void dispose()
  {
    if (cssTypeItemProvider != null) cssTypeItemProvider.dispose();
    if (documentRootItemProvider != null) documentRootItemProvider.dispose();
    if (ejbLocalRefTypeItemProvider != null) ejbLocalRefTypeItemProvider.dispose();
    if (ejbRefTypeItemProvider != null) ejbRefTypeItemProvider.dispose();
    if (gbeanLocatorTypeItemProvider != null) gbeanLocatorTypeItemProvider.dispose();
    if (gbeanRefTypeItemProvider != null) gbeanRefTypeItemProvider.dispose();
    if (messageDestinationTypeItemProvider != null) messageDestinationTypeItemProvider.dispose();
    if (portCompletionTypeItemProvider != null) portCompletionTypeItemProvider.dispose();
    if (portTypeItemProvider != null) portTypeItemProvider.dispose();
    if (resourceEnvRefTypeItemProvider != null) resourceEnvRefTypeItemProvider.dispose();
    if (resourceLocatorTypeItemProvider != null) resourceLocatorTypeItemProvider.dispose();
    if (resourceRefTypeItemProvider != null) resourceRefTypeItemProvider.dispose();
    if (serviceCompletionTypeItemProvider != null) serviceCompletionTypeItemProvider.dispose();
    if (serviceRefTypeItemProvider != null) serviceRefTypeItemProvider.dispose();
  }

}
